//@version=4
study("ANN GOLD WORLDWIDE  " , max_bars_back = 1)
src = close[0]
lights = input(title="Barcolor I / 0 ? ", options=["ON", "OFF"], defval="OFF")
pref = input(title="Ticker ? ", options=["GOLD", "GOLDSILVER" , "GOLD CZK" , "GOLD NZD" , "GOLD EURO" , "GOLD HUF" , 
             "GOLD INR" , "GOLD DKK" , "GOLD CHF" , "GOLD CNH" , "GOLD MXN" , "GOLD PLN" , "GOLD ZAR" ,"GOLD TRY","GOLD NOK","GOLD THB"], defval="GOLD")

// Definition : INDICATORS

// RSI

_rsi = rsi(close,14)

// MACD

fun_macd(_src,_fastlen,_slowlen,_signallen) =>

    float _output = na 
    _macd   = ema(_src,_fastlen) - ema(_src,_slowlen)
    _signal = ema(_macd , _signallen)
    _output := _macd - _signal


_hist = fun_macd(src,12,26,9)

// MOMENTUM

t_mom = 10


f_mom(_src , _length) =>

    _output = 0.00
    _length_adjusted = _length < 0 ? 0 : _length

    _output := nz((_src / _src[_length_adjusted] ) - 1 ) * 100   


mom = f_mom(src , t_mom)

// BOLLINGER BANDS 

length = 20
mult = 2.0
basis = sma(src, length)
dev = mult * stdev(src, length)
upper = basis + dev
lower = basis - dev

// CM GUPPY EMA 

len1 = 3
len2 = 5
len3 = 8
len4 = 10
len5 = 12
len6 = 15
//Slow EMA
len7 = 30
len8 = 35
len9 = 40
len10 = 45
len11 = 50
len12 = 60


//Fast EMA
ema1 = ema(src, len1)
ema2 = ema(src, len2)
ema3 = ema(src, len3)
ema4 = ema(src, len4)
ema5 = ema(src, len5)
ema6 = ema(src, len6)
//Slow EMA
ema7 = ema(src, len7)
ema8 = ema(src, len8)
ema9 = ema(src, len9)
ema10 = ema(src, len10)
ema11 = ema(src, len11)
ema12 = ema(src, len12)


// DEEP LEARNING INDICATORS

_indicator1 = ((_rsi - _rsi[1] ) / (_rsi[1]))
_indicator2 = ((volume - volume[1] ) / (volume[1]))
_indicator3 = ((_hist - _hist[1] ) / (_hist[1]))
_indicator4 = ((mom - mom[1] ) / (mom[1]))
_indicator5 = ((lower - lower[1] ) / (lower[1]))
_indicator6 = ((basis - basis[1] ) / (basis[1]))
_indicator7 = ((upper - upper[1] ) / (upper[1]))

_indicator8  = ((ema1 - ema1[1] ) / (ema1[1]))
_indicator9  = ((ema2 - ema2[1] ) / (ema2[1]))
_indicator10 = ((ema3 - ema3[1] ) / (ema3[1]))
_indicator11 = ((ema4 - ema4[1] ) / (ema4[1]))
_indicator12 = ((ema5 - ema5[1] ) / (ema5[1]))
_indicator13 = ((ema6 - ema6[1] ) / (ema6[1]))
_indicator14 = ((ema7 - ema7[1] ) / (ema7[1]))
_indicator15 = ((ema8 - ema8[1] ) / (ema8[1]))
_indicator16 = ((ema9 - ema9[1] ) / (ema9[1]))
_indicator17 = ((ema10 - ema10[1] ) / (ema10[1]))
_indicator18 = ((ema11 - ema11[1] ) / (ema11[1]))
_indicator19 = ((ema12 - ema12[1] ) / (ema12[1]))



// Inputs on Tangent Function : 

tangentdiff(_src) => nz((_src - _src[1]) / _src[1] ) 


// Deep Learning Activation Function (Tanh) : 

ActivationFunctionTanh(v) => (1 - exp(-2 * v))/( 1 + exp(-2 * v))


// DEEP LEARNING 

// INPUTS : 

input_1 = tangentdiff(_indicator1)
input_2 = tangentdiff(_indicator2)
input_3 = tangentdiff(_indicator3)
input_4 = tangentdiff(_indicator4)
input_5 = tangentdiff(_indicator5)
input_6 = tangentdiff(_indicator6)
input_7 = tangentdiff(_indicator7)
input_8 = tangentdiff(_indicator8)
input_9 = tangentdiff(_indicator9)
input_10 = tangentdiff(_indicator10)
input_11 = tangentdiff(_indicator11)
input_12 = tangentdiff(_indicator12)
input_13 = tangentdiff(_indicator13)
input_14 = tangentdiff(_indicator14)
input_15 = tangentdiff(_indicator15)
input_16 = tangentdiff(_indicator16)
input_17 = tangentdiff(_indicator17)
input_18 = tangentdiff(_indicator18)
input_19 = tangentdiff(_indicator19)


// LAYERS : 

// Input Layers 

n_0 = ActivationFunctionTanh(input_1 + 0)   
n_1 = ActivationFunctionTanh(input_2 + 0) 
n_2 = ActivationFunctionTanh(input_3 + 0) 
n_3 = ActivationFunctionTanh(input_4 + 0) 
n_4 = ActivationFunctionTanh(input_5 + 0)
n_5 = ActivationFunctionTanh(input_6 + 0)
n_6 = ActivationFunctionTanh(input_7 + 0)
n_7 = ActivationFunctionTanh(input_8 + 0)
n_8 = ActivationFunctionTanh(input_9 + 0)
n_9 = ActivationFunctionTanh(input_10 + 0)
n_10 = ActivationFunctionTanh(input_11 + 0)
n_11 = ActivationFunctionTanh(input_12 + 0)
n_12 = ActivationFunctionTanh(input_13 + 0)
n_13 = ActivationFunctionTanh(input_14 + 0)
n_14 = ActivationFunctionTanh(input_15 + 0)
n_15 = ActivationFunctionTanh(input_16 + 0)
n_16 = ActivationFunctionTanh(input_17 + 0)
n_17 = ActivationFunctionTanh(input_18 + 0)
n_18 = ActivationFunctionTanh(input_19 + 0)


// XAUUSD 

fun_gold() => 

    float _output = na 
    n_19 = ActivationFunctionTanh(52.837840  * n_0 + -34.201225 * n_1  + 38.960812 * n_2  + 5.592289  * n_3  + -22.610776 * n_4  + -70.054901 * n_5  + 
                                 14.423002  * n_6  + 10.120193  * n_7  + -35.155402* n_8  + -51.706552* n_9  + -55.268561 * n_10 + -53.904912 * n_11 + 
                                 -42.977207 * n_12 + 62.802809  * n_13 + 74.169249 * n_14 + 66.839398 * n_15 + 41.936274  * n_16 + 1.102856   * n_17 + 
                                 -108.439737 * n_18+ 39.304512 ) 

    n_20 = ActivationFunctionTanh(-37.832450 * n_0 + 7.123268   * n_1  + 0.789585  * n_2  + 9.995760  * n_3  + -15.981465 * n_4  + 10.373729  * n_5  + 
                                 -24.572326 * n_6  + 82.415254  * n_7  + 2.109146  * n_8  + -67.567661* n_9  + -54.659093 * n_10 + -19.170014 * n_11 + 
                                 41.420784  * n_12 + 101.864341 * n_13 + 63.479857 * n_14 + 21.905533 * n_15 + -14.088866 * n_16 + -43.043595 * n_17 + 
                                 -75.006982 * n_18 + -21.330688 ) 

    n_21 = ActivationFunctionTanh(-59.355328 * n_0  + -6.484519  * n_1  + 38.891522  * n_2  + -40.823312* n_3  + -5.528698  * n_4  + -16.898070 * n_5  + 
                                 -32.390997  * n_6  + 94.051719  * n_7  + 3.776645   * n_8  + -4.608196 * n_9  + -15.414148 * n_10 + -39.996880 * n_11 + 
                                 -88.351133  * n_12 + -127.242725* n_13 + -72.947885 * n_14 + -13.172230* n_15 + 44.610688  * n_16 + 93.223427  * n_17 + 
                                 163.263146  * n_18 + 39.796113 ) 

    n_22 = ActivationFunctionTanh( 29.820835* n_0  + -2.224059  * n_1  + 7.111536  * n_2  + 18.318841 * n_3  + -10.960563 * n_4  + -11.654421 * n_5  + 
                                 -27.770846 * n_6  + -64.906637 * n_7  + 22.706021 * n_8  + 20.318286 * n_9  + 6.730371   * n_10 +  -5.772614 * n_11 + 
                                 -21.275432 * n_12 + -7.441084  * n_13 + 10.866487 * n_14 + 23.714002 * n_15 + 28.647870  * n_16 + 21.613673  * n_17 + 
                                 -25.213859 * n_18 + -14.756525 ) 

    n_23 = ActivationFunctionTanh( 83.107209* n_0  + -3.755753  * n_1  + 28.286978 * n_2  + -2.042898 * n_3  + -42.383024 * n_4  + -0.979595   * n_5  + 
                                 -7.069344  * n_6  + -47.574795 * n_7  + -37.294632* n_8  + -13.705527* n_9  + -3.401552  * n_10 + 1.108021    * n_11 + 
                                 1.443413   * n_12 + -17.482420 * n_13 + -14.019000* n_14 + -2.817824 * n_15 + 15.984599  * n_16 + 39.350090   * n_17 + 
                                 97.108715  * n_18 + -37.766847 ) 

    n_24 =  ActivationFunctionTanh(8.566236 * n_19 + -2.797733 * n_20 + -9.685628 * n_21 + -2.148051 * n_22 + -35.608351 * n_23 + 0.920142)

    _output := ActivationFunctionTanh( 1.771188 * n_24 + -0.811110 ) 



fun_xauxag() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-3.293289 * n_0  + -4.242271  * n_1  + 0.168814  * n_2  + 1.954163  * n_3  + 1.730693   * n_4  + -3.302037  * n_5  + 
                                 -1.740720  * n_6  + 1.072475   * n_7  + -2.155820 * n_8  + -5.378793 * n_9  + -5.908875  * n_10 + -5.791915  * n_11 + 
                                 -5.109313  * n_12 + 0.155183   * n_13 + 1.829981  * n_14 + 3.425792  * n_15 + 4.931794   * n_16 + 6.344172   * n_17 + 
                                 8.895498   * n_18 + 4.302854 ) 


    n_20 = ActivationFunctionTanh(0.112725  * n_0  + -2.821439  * n_1  + -1.158301 * n_2  + -1.803192 * n_3  + -0.928603  * n_4  + -1.285010  * n_5  + 
                                 -1.073406  * n_6  + 3.639092   * n_7  + 1.139428  * n_8  + -2.261883 * n_9  + -3.298615  * n_10 + -3.699302  * n_11 + 
                                 -3.669609  * n_12 + -0.425345  * n_13 + 0.742052  * n_14 + 1.857981  * n_15 + 2.909362   * n_16 + 3.891997   * n_17 + 
                                 5.656258   * n_18 + -1.265431 ) 


    n_21 = ActivationFunctionTanh(-4.515406 * n_0  + 0.924750  * n_1  + -5.881846  * n_2  + -4.272092 * n_3  + -1.566735  * n_4  + -3.139416  * n_5  + 
                                 -5.881763  * n_6  + 3.054089  * n_7  + 2.827193   * n_8  + 1.043814  * n_9  + 0.505436   * n_10 + 0.310275   * n_11 + 
                                 0.350010   * n_12 + 1.815059  * n_13 + 2.403492   * n_14 + 2.995743  * n_15 + 3.578526   * n_16 + 4.143456   * n_17 + 
                                 5.203313   * n_18 + -6.435441 ) 

    n_22 = ActivationFunctionTanh(-4.486446* n_0  + -2.193984  * n_1  + -0.184867 * n_2  + -1.557776 * n_3  + -4.158562  * n_4  + -2.765102  * n_5  + 
                                 1.685605  * n_6  + 11.856392  * n_7  + 6.488190  * n_8  + -0.480345 * n_9  + -2.597117  * n_10 +  -3.566537 * n_11 + 
                                 -3.954464 * n_12 + -0.892688  * n_13 + 0.419635  * n_14 + 1.718949  * n_15 + 2.974668   * n_16 + 4.171037   * n_17 + 
                                 6.364117  * n_18 + -1.936933 ) 

    n_23 = ActivationFunctionTanh(-2.087945 * n_0  + 0.946086   * n_1  + -0.920232 * n_2  + -1.765207 * n_3  + -0.462770  * n_4  + -0.317896   * n_5  + 
                                 -0.781543  * n_6  + 0.148517   * n_7  + -0.701155 * n_8  + -1.923569 * n_9  + -2.139752  * n_10 + -2.103430   * n_11 + 
                                 -1.849399  * n_12 + 0.190544   * n_13 + 0.873926  * n_14 + 1.538059  * n_15 + 2.174384   * n_16 + 2.778105    * n_17 + 
                                 3.882067   * n_18 + -1.200732 )
                               
    n_24 = ActivationFunctionTanh(-2.052541 * n_0  + 0.476360   * n_1  + -0.929894 * n_2  + -1.942862 * n_3  + -0.100070  * n_4  + 0.038347   * n_5  + 
                                 -1.163403  * n_6  + -0.091652  * n_7  + -0.741248 * n_8  + -1.723336 * n_9  + -1.874480  * n_10 + -1.814202  * n_11 + 
                                 -1.566143  * n_12 + 0.071006   * n_13 + 0.567983  * n_14 + 1.042566  * n_15 + 1.493078   * n_16 + 1.918491   * n_17 + 
                                 2.694443   * n_18 + -1.367334 ) 

    n_25 = ActivationFunctionTanh(-2.039194 * n_0  + 0.413737   * n_1  + -0.913152 * n_2  + -1.927177 * n_3  + -0.072074  * n_4  + 0.040658   * n_5  + 
                                 -1.193038  * n_6  + -0.115242  * n_7  + -0.742619 * n_8  + -1.704406 * n_9  + -1.852546  * n_10 + -1.792755  * n_11 + 
                                 -1.548059  * n_12 + 0.053213   * n_13 + 0.534900  * n_14 + 0.993827  * n_15 + 1.428845   * n_16 + 1.839244   * n_17 + 
                                 2.587207   * n_18 + -1.342994 ) 

    n_26 = ActivationFunctionTanh(-1.661098 * n_0  + -4.188746  * n_1  + -0.888693 * n_2  + -1.184998 * n_3  + -0.376776  * n_4  + -2.900695  * n_5  + 
                                 -3.035643  * n_6  + 2.682961   * n_7  + 1.218310  * n_8  + -1.553996 * n_9  + -2.458561  * n_10 + -2.818591  * n_11 + 
                                 -2.815350  * n_12 + -0.616287  * n_13 + 0.077332  * n_14 + 0.717021  * n_15 + 1.306654   * n_16 + 1.850669   * n_17 + 
                                 2.818780   * n_18 + -0.492482 ) 

    n_27 = ActivationFunctionTanh(-1.283988 * n_0  + -7.756250  * n_1  + 0.468907  * n_2  + 0.693231  * n_3  + -0.206825  * n_4  + -5.249115  * n_5  + 
                                 -3.389766  * n_6  + 5.486581   * n_7  + 3.683235  * n_8  + 0.132182  * n_9  + -1.092645  * n_10 + -1.681491  * n_11 + 
                                 -1.971546  * n_12 + -1.661529  * n_13 + -1.611204 * n_14 + -1.568032 * n_15 + -1.521154  * n_16 + -1.466836  * n_17 + 
                                 -1.336055  * n_18 + 1.901577 ) 

    n_28 = ActivationFunctionTanh(-8.479207 * n_0  + 12.562958  * n_1  + -0.703778 * n_2  + -2.320433 * n_3  + 2.668517   * n_4  + 5.843336   * n_5  + 
                                 1.289043   * n_6  + -2.921014  * n_7  + -6.231562 * n_8  + -7.434720 * n_9  + -6.721092  * n_10 + -5.689594  * n_11 + 
                                 -4.167879  * n_12 + 0.970256   * n_13 + 2.193011  * n_14 + 3.337068  * n_15 + 4.419745   * n_16 + 5.447004   * n_17 + 
                                 7.344716   * n_18 + -2.911055 )

    n_29 = ActivationFunctionTanh(-3.308428 * n_19  + 1.186990   * n_20  + -3.888450 * n_21  + -4.818997 * n_22  + 0.319272  * n_23  + -0.583560  * n_24  + 
                                 -0.641964  * n_25  + -0.421688  * n_26  + -4.649396 * n_27  + -8.863147 * n_28  + 5.549317 )
    
    _output := ActivationFunctionTanh(5.434937 * n_29  + -0.575618 )



fun_xauczk() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(4.745730  * n_0  + -51.529718 * n_1  + -26.660161* n_2  + 9.673956  * n_3  + -12.436939 * n_4  + 8.691398   * n_5  + 
                                 5.332824   * n_6  + 26.242072  * n_7  + -24.935651* n_8  + -26.280671* n_9  + -20.795369 * n_10 + -16.544236 * n_11 + 
                                 -12.685577 * n_12 + -2.203276  * n_13 + 4.806767  * n_14 + 13.385985 * n_15 + 21.451402  * n_16 + 29.437641  * n_17 + 
                                 45.095237  * n_18 + -33.503026 ) 


    n_20 = ActivationFunctionTanh(-4.076683 * n_0  + -0.682956  * n_1  + -5.187737 * n_2  + -20.818241* n_3  + 9.986359   * n_4  + 13.742850  * n_5  + 
                                 6.019984   * n_6  + 7.574025   * n_7  + -2.094112 * n_8  + 17.167490 * n_9  + 20.698909  * n_10 + 16.436165  * n_11 + 
                                 0.983792   * n_12 + -54.916921 * n_13 + -48.966947* n_14 + -34.846947* n_15 + -14.666582 * n_16 + 8.094586   * n_17 + 
                                 56.089266  * n_18 + -4.985143 ) 


    n_21 = ActivationFunctionTanh(7.901146  * n_0  + 5.267707  * n_1  + -20.187351 * n_2  + -0.996349 * n_3  + 5.038849   * n_4  + -13.292656 * n_5  + 
                                 -12.199657 * n_6  + 20.018246 * n_7  + -21.774162 * n_8  + -6.518447 * n_9  + 11.047537  * n_10 + 26.179880  * n_11 + 
                                 42.012429  * n_12 + 29.547791 * n_13 + 13.930317  * n_14 + -1.846266 * n_15 + -16.351985 * n_16 + -29.290766 * n_17 + 
                                 -51.972840 * n_18 + 10.264944 ) 

    n_22 = ActivationFunctionTanh(-2.521666* n_0  + 12.704039  * n_1  + 0.649873  * n_2  + -24.816541* n_3  + 1.465266   * n_4  + 9.007167   * n_5  + 
                                 1.062160  * n_6  + -4.932232  * n_7  + 27.305573 * n_8  + 20.782667 * n_9  + 4.766576   * n_10 +  -11.508066* n_11 + 
                                 -31.671112* n_12 + -43.281890 * n_13 + -29.324645* n_14 + -12.061469* n_15 + 6.394896   * n_16 + 24.602181  * n_17 + 
                                 58.823273 * n_18 + -19.101085 ) 

    n_23 = ActivationFunctionTanh(70.892825 * n_0  + -10.676320 * n_1  + -16.640948* n_2  + 9.904983  * n_3  + 10.512649  * n_4  + -3.557822   * n_5  + 
                                 -7.725527  * n_6  + -40.371820 * n_7  + -38.081194* n_8  + -13.096353* n_9  + 0.039610   * n_10 + 11.511816   * n_11 + 
                                 27.814040  * n_12 + 64.600175  * n_13 + 55.331927 * n_14 + 35.778855 * n_15 + 6.345120   * n_16 + -29.248131  * n_17 + 
                                 -112.413755* n_18 + -7.610398 )
                               
    n_24 = ActivationFunctionTanh(-17.343840* n_0  + 0.767101   * n_1  + -40.644371* n_2  + -4.145014 * n_3  + 0.194800   * n_4  + -4.477111  * n_5  + 
                                 -4.503615  * n_6  + 9.830810   * n_7  + 40.025223 * n_8  + 9.969661  * n_9  + -16.837487 * n_10 + -37.767856 * n_11 + 
                                 -51.943287 * n_12 + 33.775986  * n_13 + 50.741664 * n_14 + 49.898517 * n_15 + 30.727973  * n_16 + -2.947823  * n_17 + 
                                 -101.931087* n_18 + 15.344924  ) 

    n_25 = ActivationFunctionTanh(10.376647 * n_0  + 29.699613  * n_1  + 12.787300 * n_2  + -9.007170 * n_3  + 1.368060   * n_4  + 20.487175  * n_5  + 
                                 16.015515  * n_6  + 20.183464  * n_7  + -8.252053 * n_8  + -6.997404 * n_9  + -0.914592  * n_10 + 4.475872   * n_11 + 
                                 9.871505   * n_12 + 1.445088   * n_13 + -4.538090 * n_14 + -10.379357* n_15 + -16.157921 * n_16 + -21.312367 * n_17 + 
                                 -29.900973 * n_18 + -23.801317  ) 

    n_26 = ActivationFunctionTanh(-12.975447* n_0  + -32.549235 * n_1  + -8.730729 * n_2  + 2.250615  * n_3  + 4.938034   * n_4  + -38.027041 * n_5  + 
                                 -10.839914 * n_6  + -11.241379 * n_7  + -43.999729* n_8  + -4.402581 * n_9  + 13.218975  * n_10 + 21.207606  * n_11 + 
                                 21.851889  * n_12 + -5.278015  * n_13 + -7.028463 * n_14 + -5.131683 * n_15 + 0.345171   * n_16 + 7.274573   * n_17 + 
                                 21.947830  * n_18 + 32.088069 ) 

    n_27 = ActivationFunctionTanh(17.422205 * n_0  + 14.360163  * n_1  + 11.875478 * n_2  + -9.557429 * n_3  + -9.364231  * n_4  + -27.205900 * n_5  + 
                                 -8.032297  * n_6  + -62.735778 * n_7  + -37.908551* n_8  + 21.291598 * n_9  + 42.744228  * n_10 + 50.218468  * n_11 + 
                                 44.602181  * n_12 + -19.907446 * n_13 + -23.567083* n_14 + -20.025347* n_15 + -11.075807 * n_16 + 0.886592   * n_17 + 
                                 28.923841  * n_18 + -5.947984 ) 

    n_28 = ActivationFunctionTanh(-24.452851* n_0  + 3.667604   * n_1  + 29.326528 * n_2  + -6.786520 * n_3  + -23.854140 * n_4  + 17.970779  * n_5  + 
                                 7.304729   * n_6  + 44.722013  * n_7  + -1.954486 * n_8  + -8.679770 * n_9  + -6.067972  * n_10 + -8.687577  * n_11 + 
                                 -22.544094 * n_12 + -73.265799 * n_13 + -54.684578* n_14 + -23.015236* n_15 + 15.949468  * n_16 + 56.861856  * n_17 + 
                                 134.756829 * n_18 + -29.361989 )

    n_29 = ActivationFunctionTanh(-32.968769* n_19  + -11.783161 * n_20  + -10.555081* n_21  + -23.452245* n_22  + -11.692577  * n_23  + -12.796462  * n_24  + 
                                 -10.957651 * n_25  + -12.048742 * n_26  + -44.849667* n_27  + -18.900195 * n_28  + 32.574927 )
    
    _output := ActivationFunctionTanh(1.557477 * n_29  + -0.562858 )


fun_xaunzd() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(3.235615  * n_0  + 6.582462   * n_1  + -7.925982 * n_2  + -8.746941 * n_3  + 7.695209   * n_4  + 3.581083   * n_5  + 
                                 -9.495612  * n_6  + 8.429943   * n_7  + 5.472996  * n_8  + 2.154858  * n_9  + 1.152512   * n_10 + 0.942310   * n_11 + 
                                 1.119597   * n_12 + 2.431091   * n_13 + 2.158860  * n_14 + 1.688604  * n_15 + 1.123854   * n_16 + 0.527762   * n_17 + 
                                 -0.638051  * n_18 + -9.071355 ) 


    n_20 = ActivationFunctionTanh(6.323108  * n_0  + 1.808370   * n_1  + 1.189460  * n_2  + -3.919364 * n_3  + -0.062924  * n_4  + 0.708527   * n_5  + 
                                 0.126990   * n_6  + 3.534111   * n_7  + 3.340706  * n_8  + 0.103528  * n_9  + -1.768669  * n_10 + -3.113737  * n_11 + 
                                 -4.231908  * n_12 + -4.078539  * n_13 + -3.359862 * n_14 + -2.502019 * n_15 + -1.555368  * n_16 + -0.560329  * n_17 + 
                                 1.455149   * n_18 + -0.122317 ) 


    n_21 = ActivationFunctionTanh(-2.150815 * n_0  + -9.987822 * n_1  + -1.932285  * n_2  + -0.432525 * n_3  + 6.721500   * n_4  + 1.278269   * n_5  + 
                                 -5.875241  * n_6  + 0.290173  * n_7  + 1.692694   * n_8  + 0.640639  * n_9  + -0.261182  * n_10 + -0.839634  * n_11 + 
                                 -1.107455  * n_12 + 2.104784  * n_13 + 3.418926   * n_14 + 4.640333  * n_15 + 5.757207   * n_16 + 6.772982   * n_17 + 
                                 8.533594   * n_18 + -1.810939 ) 

    n_22 = ActivationFunctionTanh(7.631161 * n_0  + 2.104900   * n_1  + 0.103043  * n_2  + -9.660436 * n_3  + -4.820186  * n_4  + -12.176860 * n_5  + 
                                 -4.376267 * n_6  + 1.668241   * n_7  + 4.235089  * n_8  + 2.623904  * n_9  + 0.978641   * n_10 +  -0.396184 * n_11 + 
                                 -1.789842 * n_12 + -1.931664  * n_13 + -0.756397 * n_14 + 0.747959  * n_15 + 2.474476   * n_16 + 4.334391   * n_17 + 
                                 8.189856  * n_18 + -0.011341 ) 

    n_23 = ActivationFunctionTanh(-1.967035 * n_0  + 1.594584   * n_1  + 1.211221  * n_2  + 5.721852  * n_3  + -1.543530  * n_4  + 2.361984    * n_5  + 
                                 1.753680   * n_6  + -3.445989  * n_7  + -4.197014 * n_8  + -6.584526 * n_9  + -7.545405  * n_10 + -7.934337   * n_11 + 
                                 -7.578213  * n_12 + -2.430045  * n_13 + -0.684541 * n_14 + 1.003669  * n_15 + 2.628044   * n_16 + 4.182748    * n_17 + 
                                 7.068823   * n_18 + -1.682246 )
                               
    n_24 = ActivationFunctionTanh(10.500964 * n_0  + 2.436086   * n_1  + -1.766998 * n_2  + 5.000995  * n_3  + 2.500747   * n_4  + -1.473815  * n_5  + 
                                 -4.377894  * n_6  + 5.171533   * n_7  + 4.863063  * n_8  + 2.070071  * n_9  + 1.012373   * n_10 + 0.481065   * n_11 + 
                                 0.067516   * n_12 + -1.319688  * n_13 + -1.968080 * n_14 + -2.594018 * n_15 + -3.149668  * n_16 + -3.617898  * n_17 + 
                                 -4.306238  * n_18 + -3.094750  ) 

    n_25 = ActivationFunctionTanh(-16.940092* n_0  + -12.751720 * n_1  + 0.396157  * n_2  + 5.986378  * n_3  + 3.064656   * n_4  + 2.362271   * n_5  + 
                                 -1.739656  * n_6  + 3.266776   * n_7  + 1.124277  * n_8  + -2.101926 * n_9  + -3.238942  * n_10 + -3.827068  * n_11 + 
                                 -4.003509  * n_12 + -1.500060  * n_13 + -0.278794 * n_14 + 1.037777  * n_15 + 2.420145   * n_16 + 3.842932   * n_17 + 
                                 6.728096   * n_18 + -0.509528  ) 

    n_26 = ActivationFunctionTanh(0.027230  * n_0  + -4.292164  * n_1  + 1.484790  * n_2  + -0.290173 * n_3  + -2.363052  * n_4  + -2.065311  * n_5  + 
                                 0.915756   * n_6  + 0.607530   * n_7  + 4.644569  * n_8  + 3.869895  * n_9  + 2.390669   * n_10 + 1.019030   * n_11 + 
                                 -0.625240  * n_12 + -3.451550  * n_13 + -3.252630 * n_14 + -2.691734 * n_15 + -1.859552  * n_16 + -0.834388  * n_17 + 
                                 1.549907   * n_18 + 0.211907 ) 

    n_27 = ActivationFunctionTanh(2.896902  * n_0  + 1.098865   * n_1  + -0.395195 * n_2  + -2.260282 * n_3  + -0.460352  * n_4  + -1.062176  * n_5  + 
                                 -1.181698  * n_6  + 2.226832   * n_7  + 2.644252  * n_8  + 0.442397  * n_9  + -1.003702  * n_10 + -2.110341  * n_11 + 
                                 -3.182469  * n_12 + -3.628450  * n_13 + -2.935296 * n_14 + -2.013737 * n_15 + -0.937404  * n_16 + 0.233679   * n_17 + 
                                 2.684978   * n_18 + -1.332610 ) 

    n_28 = ActivationFunctionTanh(-13.587501* n_0  + 3.600739   * n_1  + -1.381323 * n_2  + 10.530691 * n_3  + 3.978853   * n_4  + 9.488221   * n_5  + 
                                 1.697214   * n_6  + -11.128120 * n_7  + -0.774035 * n_8  + 2.516152  * n_9  + 2.356751   * n_10 + 1.929086   * n_11 + 
                                 1.197149   * n_12 + -0.797072  * n_13 + -1.057473 * n_14 + -1.058702 * n_15 + -0.790640  * n_16 + -0.275269  * n_17 + 
                                 1.334317   * n_18 + -4.393172 )

    n_29 = ActivationFunctionTanh(-14.627167* n_19  + -6.381234  * n_20  + -7.027861 * n_21  + -9.839066  * n_22  + -11.590154  * n_23  + -13.684880  * n_24  + 
                                 -13.599533 * n_25  + -4.900433  * n_26  + -4.450212 * n_27  + -9.837397  * n_28  + 22.873113 )
    
    _output := ActivationFunctionTanh(12.643468 * n_29  + -0.423790 )


fun_xaueur() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-10.360949* n_0  + -3.608046  * n_1  + 7.497085  * n_2  + 3.659722  * n_3  + 5.245215   * n_4  + 10.664806  * n_5  + 
                                 4.511523   * n_6  + 8.093488   * n_7  + -3.617270 * n_8  + -1.434669 * n_9  + 1.563378   * n_10 + 4.246909   * n_11 + 
                                 7.184713   * n_12 + 7.958675   * n_13 + 4.145656  * n_14 + -0.987222 * n_15 + -6.834712  * n_16 + -12.917125 * n_17 + 
                                 -25.001196 * n_18 + 5.638370 ) 


    n_20 = ActivationFunctionTanh(-10.573675* n_0  + -21.187009 * n_1  + -4.485553 * n_2  + -5.283718 * n_3  + -3.110572  * n_4  + 5.425828   * n_5  + 
                                 6.522796   * n_6  + 5.956079   * n_7  + 1.569846  * n_8  + -0.538697 * n_9  + 1.024281   * n_10 + 2.682770   * n_11 + 
                                 3.362698   * n_12 + -10.223857 * n_13 + -11.226849* n_14 + -9.067602 * n_15 + -3.994677  * n_16 + 3.178884   * n_17 + 
                                 21.488682  * n_18 + 1.058996 ) 


    n_21 = ActivationFunctionTanh(-1.462386 * n_0  + 5.340868  * n_1  + 6.207106   * n_2  + -2.403054 * n_3  + -5.469199  * n_4  + -9.378924  * n_5  + 
                                 -4.681793  * n_6  + 4.399032  * n_7  + -8.371508  * n_8  + -7.723269 * n_9  + -4.304652  * n_10 + -1.305650  * n_11 + 
                                 1.263556   * n_12 + -0.487917 * n_13 + -0.283227  * n_14 + 1.078491  * n_15 + 3.230650   * n_16 + 5.818702   * n_17 + 
                                 11.327072  * n_18 + -3.509585 ) 

    n_22 = ActivationFunctionTanh(-24.964876 * n_0  + 20.034992  * n_1  + -5.276465 * n_2  + -0.606729 * n_3  + 6.673915   * n_4  + -12.438703 * n_5  + 
                                 -16.251073  * n_6  + -13.311991 * n_7  + 0.851179  * n_8  + 4.055994  * n_9  + 2.953019   * n_10 +  1.335505  * n_11 + 
                                 -0.337784   * n_12 + 6.837977   * n_13 + 8.299476  * n_14 + 7.770808  * n_15 + 5.441233   * n_16 + 1.916665   * n_17 + 
                                 -6.756967   * n_18 + 2.620606 ) 

    n_23 = ActivationFunctionTanh(-14.459420* n_0  + -18.948846 * n_1  + 3.135527  * n_2  + 6.241513  * n_3  + -5.901543  * n_4  + 9.324675    * n_5  + 
                                 7.395216   * n_6  + 7.801774   * n_7  + 12.233793 * n_8  + 5.315040  * n_9  + -1.883049  * n_10 + -8.558988   * n_11 + 
                                 -15.197392 * n_12 + -6.927443  * n_13 + -1.307962 * n_14 + 2.662123  * n_15 + 4.585262   * n_16 + 4.694084    * n_17 + 
                                 1.027160   * n_18 + -7.723451 )
                               
    n_24 = ActivationFunctionTanh(8.856571  * n_0  + 2.808481   * n_1  + -1.836822 * n_2  + -1.600807 * n_3  + 1.135710   * n_4  + -7.126517  * n_5  + 
                                 -9.203248  * n_6  + 4.968792   * n_7  + 3.218024  * n_8  + -1.119934 * n_9  + -4.408246  * n_10 + -7.243703  * n_11 + 
                                 -9.962509  * n_12 + -5.639403  * n_13 + -1.596313 * n_14 + 2.610497  * n_15 + 6.511246   * n_16 + 9.990768   * n_17 + 
                                 15.930869  * n_18 + -8.061652  ) 

    n_25 = ActivationFunctionTanh(3.637211  * n_0  + 10.887544  * n_1  + -3.306471 * n_2  + 2.327875  * n_3  + -13.945562 * n_4  + -17.270937 * n_5  + 
                                 -4.166162  * n_6  + -0.243240  * n_7  + -4.027496 * n_8  + -6.783517 * n_9  + -7.968426  * n_10 + -8.352542  * n_11 + 
                                 -7.809136  * n_12 + 2.721328   * n_13 + 5.592544  * n_14 + 7.711939  * n_15 + 9.024653   * n_16 + 9.744290   * n_17 + 
                                 10.236295  * n_18 + -1.337733  ) 

    n_26 = ActivationFunctionTanh(-22.233812* n_0  + 13.394031  * n_1  + -11.470667* n_2  + -2.386010 * n_3  + 9.407674   * n_4  + -6.985460  * n_5  + 
                                 -8.036968  * n_6  + 1.017889   * n_7  + -1.318766 * n_8  + 0.197231  * n_9  + 1.802109   * n_10 + 3.573572   * n_11 + 
                                 5.707401   * n_12 + 2.212680   * n_13 + 0.377316  * n_14 + -0.392504 * n_15 + -0.151930  * n_16 + 0.734908   * n_17 + 
                                 3.062497   * n_18 + 2.612229 ) 
    
    _output := ActivationFunctionTanh(10.270837  * n_19  + -11.132754  * n_20  + -16.161463  * n_21  + 5.247627 * n_22  + 
                                     3.775285    * n_23  + 2.421897    * n_24  + 
                                     16.453057   * n_25  + -4.882342   * n_26  + -10.247344 )


fun_xauhuf() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-3.504914 * n_0  + -9.519159  * n_1  + -0.017812 * n_2  + -2.428335 * n_3  + -0.386130  * n_4  + -7.969236  * n_5  + 
                                 -4.396113  * n_6  + -11.860788 * n_7  + 1.630256  * n_8  + 6.618987  * n_9  + 5.024581   * n_10 + 2.302395   * n_11 + 
                                 -1.602087  * n_12 + -3.996687  * n_13 + -2.153543 * n_14 + -0.617719 * n_15 + 0.594197   * n_16 + 1.256269   * n_17 + 
                                 0.795496   * n_18 + 10.313726 ) 


    n_20 = ActivationFunctionTanh(-0.953027 * n_0  + 14.861393  * n_1  + -18.392882* n_2  + -0.260519 * n_3  + 6.029562   * n_4  + 6.829865   * n_5  + 
                                 -7.015453  * n_6  + -4.040076  * n_7  + 1.572367  * n_8  + 4.731946  * n_9  + 6.574664   * n_10 + 8.116152   * n_11 + 
                                 9.716284   * n_12 + 5.629680   * n_13 + 2.337472  * n_14 + -0.929632 * n_15 + -4.223911  * n_16 + -7.187591  * n_17 + 
                                 -11.752286 * n_18 + -12.994158 ) 


    n_21 = ActivationFunctionTanh(-1.932149 * n_0  + 8.334847  * n_1  + -10.097576 * n_2  + -2.740016 * n_3  + 9.914701   * n_4  + 0.964842   * n_5  + 
                                 -5.716173  * n_6  + -1.583741 * n_7  + -0.805667  * n_8  + -0.294919 * n_9  + -0.655820  * n_10 + -1.055266  * n_11 + 
                                 -1.336057  * n_12 + 1.177564  * n_13 + 1.696819   * n_14 + 1.706759  * n_15 + 1.191497   * n_16 + 0.298368   * n_17 + 
                                 -2.106019  * n_18 + -0.643585 ) 

    n_22 = ActivationFunctionTanh(-0.622856* n_0  + 5.003223   * n_1  + 13.598688 * n_2  + -5.337770 * n_3  + -15.708006 * n_4  + -11.739313 * n_5  + 
                                 3.785089  * n_6  + -13.587604 * n_7  + 1.486715  * n_8  + 2.483701  * n_9  + 0.131762   * n_10 +  -2.079535 * n_11 + 
                                 -4.069674 * n_12 + 1.157441   * n_13 + 2.674029  * n_14 + 2.932888  * n_15 + 2.062551   * n_16 + 0.412704   * n_17 + 
                                 -4.029445 * n_18 + 2.310062 ) 

    n_23 = ActivationFunctionTanh(-4.755535 * n_0  + 2.879312   * n_1  + -0.026185 * n_2  + 2.175393  * n_3  + 0.608531   * n_4  + -3.020694   * n_5  + 
                                 -3.069334  * n_6  + -5.099230  * n_7  + -7.584811 * n_8  + -6.206162 * n_9  + -4.191887  * n_10 + -1.900722   * n_11 + 
                                 0.944198   * n_12 + -0.370186  * n_13 + -2.208425 * n_14 + -3.363264 * n_15 + -3.483849  * n_16 + -2.869755   * n_17 + 
                                 -0.879610  * n_18 + 8.004213 )
                               
    n_24 = ActivationFunctionTanh(-9.577873 * n_0  + -2.379490  * n_1  + 0.455018  * n_2  + 1.062746  * n_3  + 6.078199   * n_4  + 0.735299   * n_5  + 
                                 -4.152314  * n_6  + 5.459750   * n_7  + 3.419173  * n_8  + -1.593411 * n_9  + -4.292808  * n_10 + -6.273287  * n_11 + 
                                 -8.055437  * n_12 + -5.164076  * n_13 + -3.325909 * n_14 + -1.881467 * n_15 + -0.736927  * n_16 + 0.069280   * n_17 + 
                                 0.877895   * n_18 + 3.563897  ) 

    n_25 = ActivationFunctionTanh(-3.123613 * n_0  + -2.686824  * n_1  + -0.013908 * n_2  + 3.766959  * n_3  + 3.081652   * n_4  + -3.303739  * n_5  + 
                                 -6.403703  * n_6  + -4.672493  * n_7  + -3.711440 * n_8  + -2.286004 * n_9  + -0.875795  * n_10 + 0.727908   * n_11 + 
                                 2.989347   * n_12 + 4.954387   * n_13 + 3.428899  * n_14 + 1.673811  * n_15 + -0.094425  * n_16 + -1.673076  * n_17 + 
                                 -4.176008  * n_18 + 0.158981  ) 

    n_26 = ActivationFunctionTanh(9.366978  * n_0  + -29.067124 * n_1  + 2.991134  * n_2  + -8.246393 * n_3  + -13.327018 * n_4  + -13.195979 * n_5  + 
                                 -1.176692  * n_6  + 0.734107   * n_7  + 10.606449 * n_8  + 10.835160 * n_9  + 8.414377   * n_10 + 5.991791   * n_11 + 
                                 3.372391   * n_12 + 0.332242   * n_13 + -0.418291 * n_14 + -1.571393 * n_15 + -2.970731  * n_16 + -4.448417  * n_17 + 
                                 -7.383456  * n_18 + 0.691313 ) 

    n_27 = ActivationFunctionTanh(2.259276  * n_0  + 7.017724   * n_1  + 2.823705  * n_2  + -1.554352 * n_3  + 4.375226   * n_4  + -7.561932  * n_5  + 
                                 -13.776731 * n_6  + -19.482126 * n_7  + -10.655231* n_8  + -6.123537 * n_9  + -5.975191  * n_10 + -6.152271  * n_11 + 
                                 -5.905986  * n_12 + 2.831087   * n_13 + 5.472052  * n_14 + 7.545923  * n_15 + 8.836454   * n_16 + 9.553124   * n_17 + 
                                 10.360369  * n_18 + -3.404147 ) 

    n_28 = ActivationFunctionTanh(4.495185  * n_0  + 3.965550   * n_1  + -5.152192 * n_2  + 2.123396  * n_3  + -8.515824  * n_4  + -11.561071 * n_5  + 
                                 -4.484382  * n_6  + -6.190477  * n_7  + -20.513976* n_8  + -13.184883* n_9  + -7.098282  * n_10 + -3.043590  * n_11 + 
                                 -0.247776  * n_12 + 0.223682   * n_13 + 2.035506  * n_14 + 4.971173  * n_15 + 8.555109   * n_16 + 12.372345  * n_17 + 
                                 20.168499  * n_18 + -0.110515 )

    n_29 = ActivationFunctionTanh(-0.389069 * n_0  + -6.542549  * n_1  + 0.419425  * n_2  + -3.641271 * n_3  + -6.315659  * n_4  + -5.513087  * n_5  + 
                                 2.475001   * n_6  + -2.572081  * n_7  + -0.813515 * n_8  + 3.601290  * n_9  + 4.819323   * n_10 + 4.905623   * n_11 + 
                                 3.597284   * n_12 + -7.753180  * n_13 + -8.352922 * n_14 + -6.878043 * n_15 + -3.375859  * n_16 + 1.460189   * n_17 + 
                                 13.202886  * n_18 + 3.983650 )

    _output := ActivationFunctionTanh(1.886931  * n_19  + -14.066792 * n_20  + 4.513749  * n_21  + 4.437853  * n_22  + -6.231714  * n_23  + 6.630181 * n_24  + 
                                     -4.062506  * n_25  + 1.142268   * n_26  + 16.028284 * n_27  + -15.321308* n_28  + -4.968482  * n_29 + -0.118462  )
    

fun_xauinr() => 

    float _output = na 
    n_19 = ActivationFunctionTanh(1.338034  * n_0 + -4.295451   * n_1  + 4.585731  * n_2  + -6.271750 * n_3  + 16.952178  * n_4  + -9.089597  * n_5  + 
                                 16.435793  * n_6  + -28.421142 * n_7  + 21.424372 * n_8  + -0.762171 * n_9  + -4.091473  * n_10 + -1.441544  * n_11 + 
                                 4.142981   * n_12 + -0.332557  * n_13 + -2.275411 * n_14 + -1.536477 * n_15 + 0.246539   * n_16 + 0.997005   * n_17 + 
                                 -1.366607  * n_18 + -10.168573 ) 

    n_20 = ActivationFunctionTanh(-10.119890 * n_0 + -6.511124  * n_1  + 6.116721  * n_2  + -19.336548* n_3  + -0.643843  * n_4  + 9.178524   * n_5  + 
                                 -8.404291   * n_6  + -8.931174 * n_7  + -37.686482* n_8  + 3.140716  * n_9  + 17.598078  * n_10 + 21.523300  * n_11 + 
                                 18.046718   * n_12 + -14.927495* n_13 + -16.625894* n_14 + -14.595998* n_15 + -7.366387  * n_16 + 1.503763   * n_17 + 
                                 25.103199   * n_18 + 5.122815 ) 

    n_21 = ActivationFunctionTanh(-24.112868 * n_0  + -1.418809  * n_1  + 26.931549  * n_2  + 15.330560 * n_3  + -6.470608  * n_4  + 5.088066   * n_5  + 
                                 9.342665    * n_6  + -5.737693  * n_7  + 20.644658  * n_8  + 20.077949 * n_9  + 3.211493   * n_10 + -11.887696 * n_11 + 
                                 -27.220533  * n_12 + -24.340011 * n_13 + -14.614189 * n_14 + -4.646924 * n_15 + 5.819542   * n_16 + 15.340390  * n_17 + 
                                 33.559956   * n_18 + -36.663710 ) 

    n_22 = ActivationFunctionTanh(-6.402095 * n_0  + -6.279015  * n_1  + -17.355506* n_2  + 8.695523  * n_3  + -9.579677  * n_4  + 0.937325   * n_5  + 
                                 14.177647  * n_6  + -12.908005 * n_7  + 11.929930 * n_8  + 8.574813  * n_9  + 1.111354   * n_10 +  -5.371287 * n_11 + 
                                 -14.852120 * n_12 + -23.509266 * n_13 + -15.211625* n_14 + -5.204408 * n_15 + 6.476522   * n_16 + 17.640535  * n_17 + 
                                 37.757893  * n_18 + -0.770972 ) 

    n_23 = ActivationFunctionTanh(3.621245  * n_0  + -5.505017  * n_1  + -7.633854 * n_2  + -3.688023 * n_3  + -7.335649  * n_4  + -5.147793   * n_5  + 
                                 7.324642   * n_6  + 14.066925  * n_7  + -30.164307* n_8  + -6.676329 * n_9  + 1.939252   * n_10 + 4.498869    * n_11 + 
                                 4.653077   * n_12 + -2.681290  * n_13 + -2.920960 * n_14 + -1.272537 * n_15 + 2.550101   * n_16 + 6.083301    * n_17 + 
                                 13.865967  * n_18 + 2.126926 ) 

    _output :=  ActivationFunctionTanh(17.766259 * n_19 + -1.385595 * n_20 + -7.306278 * n_21 + 10.014384 * n_22 + -9.748840 * n_23 + -0.513385)

    
fun_xaudkk() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(28.900044 * n_0  + 3.024651   * n_1  + 0.532454  * n_2  + -1.533008 * n_3  + 18.258056  * n_4  + 39.124328  * n_5  + 
                                 20.235648  * n_6  + 7.516692   * n_7  + 7.509276  * n_8  + 2.355281  * n_9  + -1.105365  * n_10 + -3.081654  * n_11 + 
                                 -3.462405  * n_12 + 2.147502   * n_13 + -0.805398 * n_14 + -6.168008 * n_15 + -12.916186 * n_16 + -20.393016 * n_17 + 
                                 -35.897681 * n_18 + 3.302455 ) 


    n_20 = ActivationFunctionTanh(-0.944949 * n_0  + -8.237732  * n_1  + 9.076469  * n_2  + -5.787001 * n_3  + -0.337732  * n_4  + 8.244859   * n_5  + 
                                 1.355656   * n_6  + 5.403588   * n_7  + -0.098397 * n_8  + -0.517564 * n_9  + -0.404258  * n_10 + -0.057069  * n_11 + 
                                 0.753313   * n_12 + 1.566248   * n_13 + 0.251823  * n_14 + -1.267134 * n_15 + -2.695654  * n_16 + -3.772410  * n_17 + 
                                 -4.575315  * n_18 + -2.945653 ) 


    n_21 = ActivationFunctionTanh(34.442132 * n_0  + -20.675371* n_1  + 17.599197  * n_2  + -10.421214* n_3  + 11.431487  * n_4  + -17.659906 * n_5  + 
                                 -17.281513 * n_6  + -21.868718* n_7  + -11.911850 * n_8  + 6.311417  * n_9  + 13.183687  * n_10 + 15.806528  * n_11 + 
                                 14.288796  * n_12 + -8.233837 * n_13 + -10.954663 * n_14 + -11.733557* n_15 + -10.929292 * n_16 + -9.637642  * n_17 + 
                                 -7.451658  * n_18 + 9.532507 ) 

    n_22 = ActivationFunctionTanh(-6.055554  * n_0  + 7.907683   * n_1  + 0.416703  * n_2  + -1.087782 * n_3  + -15.332561 * n_4  + -21.602144 * n_5  + 
                                 -4.607150   * n_6  + -21.859837 * n_7  + -14.244299* n_8  + -0.462356 * n_9  + 3.681252   * n_10 +  5.149978  * n_11 + 
                                 5.217081    * n_12 + 9.386463   * n_13 + 10.478446 * n_14 + 9.940239  * n_15 + 7.614585   * n_16 + 4.013239   * n_17 + 
                                 -5.454471   * n_18 + 2.071715 ) 

    n_23 = ActivationFunctionTanh(17.837508 * n_0  + -11.184616 * n_1  + -17.524182* n_2  + 17.400902 * n_3  + 0.057089   * n_4  + -13.731081  * n_5  + 
                                 -16.029416 * n_6  + 8.360491   * n_7  + -15.588985* n_8  + -8.105308 * n_9  + -0.451189  * n_10 + 5.885591    * n_11 + 
                                 12.270653  * n_12 + 8.694359   * n_13 + 3.197455  * n_14 + -2.116184 * n_15 + -6.750896  * n_16 + -10.361608  * n_17 + 
                                 -14.438053 * n_18 + -2.950791 )
                               
    n_24 = ActivationFunctionTanh(-2.223253 * n_0  + 3.045624   * n_1  + -10.129845* n_2  + -1.062562 * n_3  + 0.776129   * n_4  + 0.995140   * n_5  + 
                                 -3.263939  * n_6  + 9.995312   * n_7  + 2.185280  * n_8  + -2.862946 * n_9  + -8.016236  * n_10 + -13.285741 * n_11 + 
                                 -19.035149 * n_12 + -7.888886  * n_13 + -0.830100 * n_14 + 4.631334  * n_15 + 8.252112   * n_16 + 10.332117  * n_17 + 
                                 11.696965  * n_18 + 0.915170  ) 

    n_25 = ActivationFunctionTanh(5.245671  * n_0  + 2.890586   * n_1  + -0.158281 * n_2  + -6.863769 * n_3  + 6.752502   * n_4  + -7.171726  * n_5  + 
                                 -10.755520 * n_6  + 10.347500  * n_7  + 8.747625  * n_8  + -8.353003 * n_9  + -16.262967 * n_10 + -21.176243 * n_11 + 
                                 -24.244320 * n_12 + -9.214237  * n_13 + -2.757318 * n_14 + 2.809138  * n_15 + 7.455509   * n_16 + 11.217811  * n_17 + 
                                 16.861957  * n_18 + 3.217357  ) 

    n_26 = ActivationFunctionTanh(3.720678  * n_0  + 5.186975   * n_1  + 8.538636  * n_2  + 6.570428  * n_3  + -4.583601  * n_4  + -4.518374  * n_5  + 
                                 -5.307569  * n_6  + 10.512480  * n_7  + -11.719671* n_8  + -11.180195* n_9  + -7.646679  * n_10 + -3.908040  * n_11 + 
                                 0.387392   * n_12 + -0.712285  * n_13 + -1.409956 * n_14 + -0.158819 * n_15 + 2.594243   * n_16 + 6.464745   * n_17 + 
                                 15.488647  * n_18 + -11.424288 ) 
    
    _output := ActivationFunctionTanh(13.685685  * n_19  + 6.774080    * n_20  + -5.487006  * n_21  + 25.567352 * n_22  + 
                                     5.564351    * n_23  + 4.105869    * n_24  + 
                                     15.381470   * n_25  + -19.564465  * n_26  + -13.906619 )


fun_xauchf() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(6.314799  * n_0  + 8.639530   * n_1  + 15.045126 * n_2  + -15.583199* n_3  + -4.823737  * n_4  + -0.839941  * n_5  + 
                                 0.787875   * n_6  + -13.180200 * n_7  + -5.179574 * n_8  + 7.220281  * n_9  + 5.308855   * n_10 + 1.180250   * n_11 + 
                                 -2.739658  * n_12 + 24.001461  * n_13 + 25.496472 * n_14 + 19.442403 * n_15 + 7.189346   * n_16 + -9.671385  * n_17 + 
                                 -51.580408 * n_18 + -2.594069 ) 


    n_20 = ActivationFunctionTanh(53.984169 * n_0  + 0.886522   * n_1  + 2.907316  * n_2  + -23.259798* n_3  + 3.108178   * n_4  + 31.004846  * n_5  + 
                                 26.806855  * n_6  + -41.661604 * n_7  + -5.101157 * n_8  + 18.242260 * n_9  + 15.600659  * n_10 + 7.155711   * n_11 + 
                                 -8.894248  * n_12 + -34.678419 * n_13 + -22.964208* n_14 + -11.375524* n_15 + -2.231292  * n_16 + 3.755273   * n_17 + 
                                 6.966889   * n_18 + 7.487469 ) 


    n_21 = ActivationFunctionTanh(7.620791  * n_0  + -8.392914 * n_1  + -0.648610  * n_2  + 0.271797  * n_3  + 10.996821  * n_4  + 2.978843   * n_5  + 
                                 -9.027606  * n_6  + 32.996660 * n_7  + 12.348500  * n_8  + -2.094189 * n_9  + -6.369180  * n_10 + -9.227321  * n_11 + 
                                 -12.663267 * n_12 + -19.583637* n_13 + -16.858406 * n_14 + -13.195986* n_15 + -9.083888  * n_16 + -4.819508  * n_17 + 
                                 3.450626   * n_18 + -2.703868 ) 

    n_22 = ActivationFunctionTanh(-27.194650 * n_0  + 1.006388   * n_1  + 5.314091  * n_2  + -11.514502* n_3  + 3.861653   * n_4  + -3.569594  * n_5  + 
                                 0.155677    * n_6  + 20.085850  * n_7  + -22.566877* n_8  + -7.149808 * n_9  + 1.915191   * n_10 +  3.822858  * n_11 + 
                                 -1.207154   * n_12 + -3.049341  * n_13 + 6.246684  * n_14 + 10.986244 * n_15 + 9.509617   * n_16 + 1.678081   * n_17 + 
                                 -30.436803  * n_18 + 14.685093 ) 

    n_23 = ActivationFunctionTanh(2.910719  * n_0  + -8.087403  * n_1  + 3.040786  * n_2  + 15.452956 * n_3  + 7.570272   * n_4  + 6.297044    * n_5  + 
                                 -7.160149  * n_6  + -15.187915 * n_7  + 24.234621 * n_8  + 18.607391 * n_9  + 2.570131   * n_10 + -13.480253  * n_11 + 
                                 -32.194594 * n_12 + -26.255380 * n_13 + -11.726376* n_14 + -0.775184 * n_15 + 6.155924   * n_16 + 9.485870    * n_17 + 
                                 7.956954   * n_18 + -6.376725 )
                               
    n_24 = ActivationFunctionTanh(-10.191233* n_0  + -0.563789  * n_1  + -2.064471 * n_2  + 10.503766 * n_3  + 5.644154   * n_4  + 1.270635   * n_5  + 
                                 -8.642631  * n_6  + 11.530018  * n_7  + 2.297475  * n_8  + 3.475962  * n_9  + 2.307004   * n_10 + -1.572303  * n_11 + 
                                 -9.450940  * n_12 + -14.628910 * n_13 + -6.922156 * n_14 + -0.357179 * n_15 + 4.094842   * n_16 + 6.332751   * n_17 + 
                                 5.402653   * n_18 + -7.642970  ) 

    n_25 = ActivationFunctionTanh(-41.837485* n_0  + 1.479806   * n_1  + 1.727133  * n_2  + 17.780773 * n_3  + 12.190878  * n_4  + -3.048080  * n_5  + 
                                 -11.992706 * n_6  + 13.172612  * n_7  + 9.040323  * n_8  + -1.363088 * n_9  + -7.085646  * n_10 + -11.588415 * n_11 + 
                                 -16.024657 * n_12 + -0.398926  * n_13 + 6.239731  * n_14 + 8.938449  * n_15 + 7.966738   * n_16 + 4.149226   * n_17 + 
                                 -8.469401  * n_18 + -6.901463  ) 

    n_26 = ActivationFunctionTanh(-19.970570* n_0  + -0.069259  * n_1  + 14.691691 * n_2  + -5.544948 * n_3  + 6.309771   * n_4  + 0.483321   * n_5  + 
                                 -6.476417  * n_6  + 0.275690   * n_7  + 16.832450 * n_8  + -7.992649 * n_9  + -14.164363 * n_10 + -11.075952 * n_11 + 
                                 2.410973   * n_12 + 19.996230  * n_13 + 4.902587  * n_14 + -7.423741 * n_15 + -13.739940 * n_16 + -12.997021 * n_17 + 
                                 8.752226   * n_18 + 2.052862 ) 
    
    _output := ActivationFunctionTanh(2.535829   * n_19  + 2.867227    * n_20  + -2.786521  * n_21  + 6.262167 * n_22  + 
                                     2.390317    * n_23  + 15.078831   * n_24  + 
                                     5.348250    * n_25  + -12.403429  * n_26  + -5.700201 )


fun_xaucnh() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(41.810181 * n_0  + -42.432107 * n_1  + 9.951339  * n_2  + -3.395280 * n_3  + 42.830101  * n_4  + 40.461485  * n_5  + 
                                 5.584394   * n_6  + -21.337375 * n_7  + -17.555355* n_8  + -2.689426 * n_9  + 6.469691   * n_10 + 12.209735  * n_11 + 
                                 15.100784  * n_12 + -0.573037  * n_13 + -5.152889 * n_14 + -9.801166 * n_15 + -15.161143 * n_16 + -21.531390 * n_17 + 
                                 -37.330620 * n_18 + 20.246856 ) 


    n_20 = ActivationFunctionTanh(-48.484054* n_0  + 38.608158  * n_1  + -24.228731* n_2  + 2.364341  * n_3  + -31.862353 * n_4  + -27.965979 * n_5  + 
                                 12.221636  * n_6  + 17.340396  * n_7  + 13.867466 * n_8  + 6.578048  * n_9  + 2.187379   * n_10 + -3.688686  * n_11 + 
                                 -13.944425 * n_12 + -23.341202 * n_13 + -11.758071* n_14 + 1.479881  * n_15 + 14.252954  * n_16 + 25.462180  * n_17 + 
                                 41.837169  * n_18 + -8.991936 ) 

    _output := ActivationFunctionTanh(25.514572 * n_19  + 25.362344   * n_20  + -25.955239 ) 


fun_xaumxn() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-1.174864 * n_0  + -6.400334  * n_1  + 3.446836  * n_2  + 4.038679  * n_3  + -0.446669  * n_4  + 7.962150   * n_5  + 
                                 -5.815666  * n_6  + 2.208980   * n_7  + 13.118114 * n_8  + 4.331502  * n_9  + -3.032003  * n_10 + -8.918413  * n_11 + 
                                 -14.276277 * n_12 + 2.589767   * n_13 + 9.153947  * n_14 + 10.877722 * n_15 + 7.429715   * n_16 + -0.660217  * n_17 + 
                                 -25.774309 * n_18 + 5.159336 ) 


    n_20 = ActivationFunctionTanh(9.041346  * n_0  + -14.416379 * n_1  + -17.019714* n_2  + 4.819391  * n_3  + 3.943096   * n_4  + 16.585260  * n_5  + 
                                 13.436238  * n_6  + -3.656393  * n_7  + -10.642056* n_8  + -3.309221 * n_9  + 1.006115   * n_10 + 4.257082   * n_11 + 
                                 7.460499   * n_12 + 1.708213   * n_13 + -2.736034 * n_14 + -6.015255 * n_15 + -7.791794  * n_16 + -8.042620  * n_17 + 
                                 -4.924119  * n_18 + 5.066921 ) 


    n_21 = ActivationFunctionTanh(-6.909917 * n_0  + 0.299371  * n_1  + -7.728322  * n_2  + -12.514101* n_3  + -9.508685  * n_4  + 3.334742   * n_5  + 
                                 10.879990  * n_6  + -8.670569 * n_7  + -18.767225 * n_8  + -3.158078 * n_9  + 4.207653   * n_10 + 9.000108   * n_11 + 
                                 13.562696  * n_12 + 11.039936 * n_13 + 5.359478   * n_14 + 0.188564  * n_15 + -3.754134  * n_16 + -6.173229  * n_17 + 
                                 -6.427421  * n_18 + -1.819911 ) 

    n_22 = ActivationFunctionTanh(14.395756  * n_0  + 2.214062   * n_1  + -4.764554 * n_2  + 5.531151  * n_3  + 9.719977   * n_4  + 17.642719  * n_5  + 
                                 -3.178189   * n_6  + 0.633732   * n_7  + -2.734433 * n_8  + -5.148109 * n_9  + -5.735645  * n_10 +  -5.820610 * n_11 + 
                                 -5.533631   * n_12 + -3.824833  * n_13 + -3.438516 * n_14 + -2.766958 * n_15 + -1.699109  * n_16 + -0.262557  * n_17 + 
                                 3.407268    * n_18 + -10.510635 ) 

    n_23 = ActivationFunctionTanh(1.187114  * n_0  + 13.321415  * n_1  + -19.591210* n_2  + -5.400263 * n_3  + -14.868311 * n_4  + -1.292973   * n_5  + 
                                 1.264869   * n_6  + -35.576357 * n_7  + 6.002293  * n_8  + 15.798861 * n_9  + 12.679701  * n_10 + 6.864279    * n_11 + 
                                 -3.043718  * n_12 + -16.824829 * n_13 + -10.636749* n_14 + -3.782298 * n_15 + 2.618953   * n_16 + 8.160170    * n_17 + 
                                 15.948094  * n_18 + 15.948094 )
                               
    n_24 = ActivationFunctionTanh(11.710669 * n_0  + -15.583239 * n_1  + 0.653097  * n_2  + 7.388393  * n_3  + 0.971754   * n_4  + 23.333926  * n_5  + 
                                 10.814396  * n_6  + -12.426197 * n_7  + -2.900064 * n_8  + 0.059669  * n_9  + 0.521277   * n_10 + 0.485865   * n_11 + 
                                 0.058050   * n_12 + 2.846527   * n_13 + 2.983138  * n_14 + 1.044791  * n_15 + -3.052399  * n_16 + -8.969381  * n_17 + 
                                 -23.401925 * n_18 + -3.226448  ) 

    n_25 = ActivationFunctionTanh(-0.104860 * n_0  + 9.566525   * n_1  + -14.577129* n_2  + 5.036335  * n_3  + 4.504303   * n_4  + -6.318470  * n_5  + 
                                 -5.194089  * n_6  + -5.694311  * n_7  + -6.981641 * n_8  + 2.058079  * n_9  + 4.044781   * n_10 + 3.703304   * n_11 + 
                                 1.313507   * n_12 + -6.668959  * n_13 + -5.772859 * n_14 + -4.213578 * n_15 + -2.469237  * n_16 + -0.768222  * n_17 + 
                                 1.970992   * n_18 + 7.001436 ) 

    n_26 = ActivationFunctionTanh(-3.169656 * n_0  + 13.019684  * n_1  + 0.674204  * n_2  + 8.311696  * n_3  + 3.179138   * n_4  + -3.204653  * n_5  + 
                                 -1.335015  * n_6  + -2.125616  * n_7  + -2.448989 * n_8  + -1.309218 * n_9  + 0.479476   * n_10 + 2.066000   * n_11 + 
                                 3.324084   * n_12 + -3.493319  * n_13 + -5.329352 * n_14 + -5.551272 * n_15 + -4.213459  * n_16 + -1.589091  * n_17 + 
                                 5.864002   * n_18 + -5.922370 ) 
    
    _output := ActivationFunctionTanh(15.777466  * n_19  + -3.150907   * n_20  + -14.750312  * n_21  + 8.566170 * n_22  + 
                                     8.137824    * n_23  + 2.682868    * n_24  + 
                                     14.754148   * n_25  + -14.058127  * n_26  + -15.861703 )


fun_xaupln() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(15.972414 * n_0  + -5.390500  * n_1  + -12.702598* n_2  + 30.431235 * n_3  + 17.782069  * n_4  + 27.127940  * n_5  + 
                                 8.778378   * n_6  + 13.045650  * n_7  + 6.478513  * n_8  + 1.867046  * n_9  + -0.114793  * n_10 + -0.823279  * n_11 + 
                                 -0.319713  * n_12 + 1.173789   * n_13 + -1.499173 * n_14 + -5.507417 * n_15 + -10.525667 * n_16 + -16.070857 * n_17 + 
                                 -27.371650 * n_18 + -11.007033 ) 


    n_20 = ActivationFunctionTanh(-13.910927* n_0  + -5.701140  * n_1  + -6.430298 * n_2  + -10.066851* n_3  + -8.253335  * n_4  + -7.911174  * n_5  + 
                                 -2.229997  * n_6  + 20.667925  * n_7  + 17.476739 * n_8  + 10.737653 * n_9  + 4.741443   * n_10 + -1.411651  * n_11 + 
                                 -9.184650  * n_12 + -15.626197 * n_13 + -13.420463* n_14 + -10.870221* n_15 + -8.144856  * n_16 + -5.186537  * n_17 + 
                                 0.049564   * n_18 + 7.504007 ) 


    n_21 = ActivationFunctionTanh(-6.200271 * n_0  + -8.873496 * n_1  + 4.546731   * n_2  + -6.465237 * n_3  + 6.873339   * n_4  + -3.368955  * n_5  + 
                                 -0.468334  * n_6  + 4.225894  * n_7  + 8.466293   * n_8  + 1.983943  * n_9  + 0.602792   * n_10 + -0.013568  * n_11 + 
                                 -2.347856  * n_12 + -18.984477* n_13 + -17.768922 * n_14 + -12.940912* n_15 + -5.177928  * n_16 + 4.579068   * n_17 + 
                                 26.537752  * n_18 + 1.122996 ) 

    n_22 = ActivationFunctionTanh(10.299086  * n_0  + 12.216603  * n_1  + 0.400990  * n_2  + -9.669251 * n_3  + -6.010440  * n_4  + -18.094789 * n_5  + 
                                 -8.206640   * n_6  + -17.339161 * n_7  + -13.761055* n_8  + -5.650441 * n_9  + -1.177879  * n_10 +  2.778493  * n_11 + 
                                 8.117711    * n_12 + 19.547027  * n_13 + 17.459644 * n_14 + 12.990694 * n_15 + 6.715486   * n_16 + -0.574486  * n_17 + 
                                 -15.515391  * n_18 + 3.539726 ) 

    n_23 = ActivationFunctionTanh(-0.379492 * n_0  + -4.089111  * n_1  + -7.264251 * n_2  + -6.820203 * n_3  + 2.407099   * n_4  + 0.178575    * n_5  + 
                                 -5.835243  * n_6  + -8.198508  * n_7  + 18.349558 * n_8  + 13.736201 * n_9  + 0.763520   * n_10 + -12.100448  * n_11 + 
                                 -25.546181 * n_12 + -15.349978 * n_13 + -7.316621 * n_14 + -0.888520 * n_15 + 3.857294   * n_16 + 7.111544    * n_17 + 
                                 10.004788  * n_18 + 10.195355 )
                               
    n_24 = ActivationFunctionTanh(-4.084871 * n_0  + -6.633488  * n_1  + 4.305539  * n_2  + -1.534721 * n_3  + 11.919820  * n_4  + 12.552140  * n_5  + 
                                 5.828874   * n_6  + 20.293730  * n_7  + 7.658856  * n_8  + 1.873125  * n_9  + -2.114174  * n_10 + -6.190937  * n_11 + 
                                 -11.649422 * n_12 + -12.915472 * n_13 + -8.409249 * n_14 + -4.010490 * n_15 + -0.733821  * n_16 + 0.716912   * n_17 + 
                                 -2.649857  * n_18 + 0.047509  ) 

    n_25 = ActivationFunctionTanh(-6.595704 * n_0  + 3.967772   * n_1  + 17.880339 * n_2  + -20.774964* n_3  + -20.851368 * n_4  + -14.769017 * n_5  + 
                                 4.179588   * n_6  + -33.534360 * n_7  + 2.552411  * n_8  + 11.993030 * n_9  + 8.984394   * n_10 + 4.406439   * n_11 + 
                                 -2.084479  * n_12 + -3.880966  * n_13 + 0.489530  * n_14 + 4.732182  * n_15 + 8.034630   * n_16 + 9.782903   * n_17 + 
                                 8.468842   * n_18 + 3.516088 ) 

    n_26 = ActivationFunctionTanh(17.856438 * n_0  + 17.784044  * n_1  + 7.823663  * n_2  + -23.754285* n_3  + -10.934150 * n_4  + -12.561230 * n_5  + 
                                 -5.353493  * n_6  + -5.319819  * n_7  + -18.581698* n_8  + -14.135422* n_9  + -7.976004  * n_10 + -4.117959  * n_11 + 
                                 -2.770202  * n_12 + -9.208937  * n_13 + -6.188957 * n_14 + -0.678875 * n_15 + 6.677288   * n_16 + 15.075248  * n_17 + 
                                 32.226550  * n_18 + 11.860150 ) 
    
    _output := ActivationFunctionTanh(4.597005   * n_19  + 3.425788    * n_20  + -8.485798  * n_21  + 6.888251 * n_22  + 
                                     5.777091    * n_23  + 5.917854    * n_24  + 
                                     5.176485    * n_25  + -2.772109   * n_26  + -10.420032 )


fun_xauzar() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-0.474336 * n_0  + 10.692822  * n_1  + 1.000986  * n_2  + -3.094261 * n_3  + -21.616239 * n_4  + -8.916419  * n_5  + 
                                 6.143044   * n_6  + -13.848966 * n_7  + 5.780793  * n_8  + 9.301425  * n_9  + 5.496890   * n_10 + 1.051077   * n_11 + 
                                 -4.581814  * n_12 + -7.895897  * n_13 + -4.533292 * n_14 + -0.898783 * n_15 + 2.609152   * n_16 + 5.765854   * n_17 + 
                                 10.732189  * n_18 + -2.766505 ) 


    n_20 = ActivationFunctionTanh(-14.974847* n_0  + 43.305166  * n_1  + -15.416765* n_2  + -0.768390 * n_3  + -25.701913 * n_4  + -27.732243 * n_5  + 
                                 6.633331   * n_6  + -22.868337 * n_7  + -4.555397 * n_8  + 9.520283  * n_9  + 10.156147  * n_10 + 7.017316   * n_11 + 
                                 -0.284052  * n_12 + -10.445101 * n_13 + -4.987200 * n_14 + 1.200507  * n_15 + 7.108110   * n_16 + 12.226125  * n_17 + 
                                 19.717818  * n_18 + 0.201148 ) 


    n_21 = ActivationFunctionTanh(-6.661225 * n_0  + 4.826406  * n_1  + -15.779759 * n_2  + 0.498640  * n_3  + 8.989149   * n_4  + 11.725837  * n_5  + 
                                 2.213473   * n_6  + -13.731457* n_7  + 3.778812   * n_8  + 1.497468  * n_9  + 0.018216   * n_10 + -0.302519  * n_11 + 
                                 0.286084   * n_12 + -2.213577 * n_13 + -3.984715  * n_14 + -4.676042 * n_15 + -4.081296  * n_16 + -2.295248  * n_17 + 
                                 3.478381   * n_18 + 4.412220 ) 

    n_22 = ActivationFunctionTanh(-9.983150  * n_0  + 8.760767   * n_1  + -16.651670* n_2  + 4.328404  * n_3  + 10.885800  * n_4  + 10.673628  * n_5  + 
                                 -7.527618   * n_6  + -20.827613 * n_7  + -20.824078* n_8  + -1.494044 * n_9  + 6.192718   * n_10 +  10.324275 * n_11 + 
                                 12.538142   * n_12 + 6.004943   * n_13 + 3.012094  * n_14 + -0.142560 * n_15 + -3.502624  * n_16 + -6.952008  * n_17 + 
                                 -13.493291  * n_18 + 4.015448 ) 

    n_23 = ActivationFunctionTanh(9.145022  * n_0  + 14.446085  * n_1  + -2.988770 * n_2  + -11.551259* n_3  + -4.524134  * n_4  + -13.665236  * n_5  + 
                                 -10.116777 * n_6  + 12.788321  * n_7  + 6.280674  * n_8  + 1.739377  * n_9  + 0.214996   * n_10 + -0.790955   * n_11 + 
                                 -1.677351  * n_12 + -1.820880  * n_13 + -1.231079 * n_14 + -0.553064 * n_15 + 0.172703   * n_16 + 0.878924    * n_17 + 
                                 2.104636   * n_18 + -11.614515 )
                               
    n_24 = ActivationFunctionTanh(-2.872864 * n_0  + 2.837308   * n_1  + 3.993964  * n_2  + -2.445919 * n_3  + -3.114121  * n_4  + 6.872451   * n_5  + 
                                 5.737093   * n_6  + 8.493252   * n_7  + -8.747245 * n_8  + -5.084121 * n_9  + -0.791241  * n_10 + 2.859961   * n_11 + 
                                 7.175210   * n_12 + 12.797681  * n_13 + 8.955530  * n_14 + 3.183369  * n_15 + -3.876382  * n_16 + -11.610226 * n_17 + 
                                 -27.097517 * n_18 + -6.089713  ) 

    n_25 = ActivationFunctionTanh(3.500207  * n_0  + 1.513894   * n_1  + -21.651374* n_2  + 2.908765  * n_3  + 16.578889  * n_4  + 25.982245  * n_5  + 
                                 0.169924   * n_6  + -8.225037  * n_7  + -12.507678* n_8  + -4.856514 * n_9  + -0.550145  * n_10 + 2.434645   * n_11 + 
                                 4.970015   * n_12 + 3.292966   * n_13 + 0.693488  * n_14 + -2.366494 * n_15 + -5.736603  * n_16 + -9.206397  * n_17 + 
                                 -15.781445 * n_18 + -0.030176  ) 

    n_26 = ActivationFunctionTanh(-6.614071 * n_0  + 18.825224  * n_1  + 5.797599  * n_2  + -4.567234 * n_3  + -14.630129 * n_4  + -11.688617 * n_5  + 
                                 3.248557   * n_6  + -0.940066  * n_7  + -1.209310 * n_8  + -3.047952 * n_9  + -3.478214  * n_10 + -2.330502  * n_11 + 
                                 1.224726   * n_12 + 7.091748   * n_13 + 4.641796  * n_14 + 2.595791  * n_15 + 1.563964   * n_16 + 1.638917   * n_17 + 
                                 4.365861   * n_18 + -4.813518 ) 
    
    _output := ActivationFunctionTanh(4.712825   * n_19  + 11.455655   * n_20  + -19.972527  * n_21  + 8.512028 * n_22  + 
                                     8.096323    * n_23  + 11.713188   * n_24  + 
                                     11.840237   * n_25  + -16.476884  * n_26  + -0.440431 )



fun_xaunok() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(-36.612490* n_0  + 25.810093  * n_1  + 1.703224  * n_2  + -8.169678 * n_3  + -20.820035 * n_4  + -9.142979  * n_5  + 
                                 28.551243  * n_6  + -18.367728 * n_7  + -39.214369* n_8  + 4.726116  * n_9  + 15.914947  * n_10 + 14.005902  * n_11 + 
                                 1.240987   * n_12 + 0.846026   * n_13 + 10.226340 * n_14 + 13.097313 * n_15 + 8.461820   * n_16 + -2.986406  * n_17 + 
                                 -40.873479 * n_18 + 27.752250 ) 


    n_20 = ActivationFunctionTanh(14.619236 * n_0  + 21.182833  * n_1  + 4.718678  * n_2  + -1.236570 * n_3  + -0.209483  * n_4  + -11.222097 * n_5  + 
                                 -11.448326 * n_6  + -22.619194 * n_7  + -16.607558* n_8  + -3.023680 * n_9  + 5.807051   * n_10 + 10.973652  * n_11 + 
                                 10.706460  * n_12 + -31.490585 * n_13 + -32.144834* n_14 + -24.708352* n_15 + -11.066460 * n_16 + 7.017795   * n_17 + 
                                 50.972202  * n_18 + -0.546676 ) 


    n_21 = ActivationFunctionTanh(21.528749 * n_0  + 31.369510 * n_1  + 20.803126  * n_2  + -22.424296* n_3  + -8.330620  * n_4  + 15.525962  * n_5  + 
                                 13.590317  * n_6  + -20.050039* n_7  + -0.902870  * n_8  + 9.342509  * n_9  + 7.534169   * n_10 + 4.036707   * n_11 + 
                                 -1.457770  * n_12 + -17.596112* n_13 + -18.001255 * n_14 + -16.789383* n_15 + -14.502126 * n_16 + -11.560964 * n_17 + 
                                 -4.836611  * n_18 + -15.896607  ) 

    n_22 = ActivationFunctionTanh(9.992465   * n_0  + 11.934686  * n_1  + -24.374327* n_2  + -7.968145 * n_3  + -12.581771 * n_4  + 16.772672  * n_5  + 
                                 1.953298    * n_6  + -34.265397 * n_7  + -9.512642 * n_8  + 2.242131  * n_9  + 3.933297   * n_10 +  4.157975  * n_11 + 
                                 3.572356    * n_12 + 3.828329   * n_13 + 3.137281  * n_14 + 1.375448  * n_15 + -1.254423  * n_16 + -4.448626  * n_17 + 
                                 -11.325227  * n_18 + 20.264974 ) 

    n_23 = ActivationFunctionTanh(34.322713 * n_0  + 64.838860  * n_1  + -25.923840* n_2  + 55.053537 * n_3  + 3.857015   * n_4  + -36.724823  * n_5  + 
                                 -26.481867 * n_6  + -37.350017 * n_7  + -31.561492* n_8  + -15.725706* n_9  + -8.729381  * n_10 + -4.181851   * n_11 + 
                                 0.684310   * n_12 + 17.447545  * n_13 + 16.559011 * n_14 + 12.210640 * n_15 + 5.557734   * n_16 + -2.095608   * n_17 + 
                                 -15.952425 * n_18 + 2.270922 )
                               
    n_24 = ActivationFunctionTanh(4.591350  * n_0  + 7.705101   * n_1  + 21.025882 * n_2  + 28.468331 * n_3  + 9.362789   * n_4  + 12.112946  * n_5  + 
                                 -11.360645 * n_6  + 14.745857  * n_7  + -11.507973* n_8  + -4.562724 * n_9  + -0.319527  * n_10 + 0.830637   * n_11 + 
                                 0.094078   * n_12 + 0.219268   * n_13 + 0.343586  * n_14 + -1.677731 * n_15 + -6.066988  * n_16 + -12.578153 * n_17 + 
                                 -30.037084 * n_18 + -32.270589  ) 

    n_25 = ActivationFunctionTanh(45.605771 * n_0  + -38.204913 * n_1  + -13.183669* n_2  + 56.203377 * n_3  + 22.467046  * n_4  + 18.694621  * n_5  + 
                                 -16.029678 * n_6  + 29.276064  * n_7  + 9.458078  * n_8  + 20.508632 * n_9  + 7.478898   * n_10 + -11.265461 * n_11 + 
                                 -36.349561 * n_12 + -33.707231 * n_13 + -16.327072* n_14 + -1.550404 * n_15 + 9.279103   * n_16 + 15.978649  * n_17 + 
                                 18.051846  * n_18 + -45.997218  ) 

    n_26 = ActivationFunctionTanh(9.993261  * n_0  + 10.308837  * n_1  + -13.370666* n_2  + 16.739395 * n_3  + 13.918434  * n_4  + -18.353157 * n_5  + 
                                 10.836784  * n_6  + -16.412274 * n_7  + -6.564004 * n_8  + 3.834064  * n_9  + -0.101551  * n_10 + -2.694420  * n_11 + 
                                 -1.920138  * n_12 + 1.984370   * n_13 + -2.240912 * n_14 + -4.757482 * n_15 + -4.389358  * n_16 + -1.145667  * n_17 + 
                                 11.102425  * n_18 + -3.373626 ) 
    
    _output := ActivationFunctionTanh(1.959459   * n_19  + 9.133891    * n_20  + -4.199323 * n_21  + 8.362924 * n_22  + 
                                     1.790221    * n_23  + 7.875001    * n_24  + 
                                     1.954803    * n_25  + -11.303186  * n_26  + -1.863200 )


fun_xauthb() =>

    float _output = na 
    
    n_19 = ActivationFunctionTanh(23.094573 * n_0  + -18.091477 * n_1  + 4.027251  * n_2  + 14.101069 * n_3  + 25.031327  * n_4  + 46.287773  * n_5  + 
                                 13.675441  * n_6  + -12.695908 * n_7  + -22.525840* n_8  + -4.018581 * n_9  + 7.702835   * n_10 + 16.901674  * n_11 + 
                                 26.677914  * n_12 + 25.741990  * n_13 + 13.386766 * n_14 + -1.737335 * n_15 + -18.371245 * n_16 + -35.611673 * n_17 + 
                                 -69.127984 * n_18 + 11.532762 ) 


    n_20 = ActivationFunctionTanh(7.082179  * n_0  + 8.376516   * n_1  + -1.365281 * n_2  + -16.808976* n_3  + -9.418554  * n_4  + -5.484173  * n_5  + 
                                 1.667960   * n_6  + 22.856009  * n_7  + -30.746690* n_8  + -7.691946 * n_9  + 5.678940   * n_10 + 10.545608  * n_11 + 
                                 8.594120   * n_12 + -4.590397  * n_13 + -2.804971 * n_14 + -1.802520 * n_15 + -2.858331  * n_16 + -6.591171  * n_17 + 
                                 -22.579912 * n_18 + 15.475744 ) 


    n_21 = ActivationFunctionTanh(-2.475562 * n_0  + 1.225581  * n_1  + -4.363940  * n_2  + -7.125404 * n_3  + -11.725145 * n_4  + -1.163163  * n_5  + 
                                 -5.390135  * n_6  + 31.396697 * n_7  + -50.389174 * n_8  + -26.034195* n_9  + 3.496312   * n_10 + 27.497433  * n_11 + 
                                 47.345089  * n_12 + -8.480785 * n_13 + -22.619786 * n_14 + -24.645081* n_15 + -16.358547 * n_16 + -0.361612  * n_17 + 
                                 44.790348  * n_18 + 7.319237  ) 

    n_22 = ActivationFunctionTanh(-8.883183  * n_0  + -0.402072  * n_1  + 12.549740 * n_2  + 17.508442 * n_3  + -12.648004 * n_4  + 21.295923  * n_5  + 
                                 -19.211007  * n_6  + 8.612085   * n_7  + -23.527907* n_8  + 0.386097  * n_9  + 5.242322   * n_10 +  4.263731  * n_11 + 
                                 0.598956    * n_12 + 2.328178   * n_13 + 1.593346  * n_14 + -0.415050 * n_15 + -2.476112  * n_16 + -3.552900  * n_17 + 
                                 -0.420458   * n_18 + -18.032525 ) 

    n_23 = ActivationFunctionTanh(-0.364328 * n_0  + 12.593949  * n_1  + 5.993026  * n_2  + 5.583551  * n_3  + -30.310531 * n_4  + -29.279297  * n_5  + 
                                 5.581853   * n_6  + 38.941435  * n_7  + -8.621924 * n_8  + -8.921154 * n_9  + -7.245294  * n_10 + -8.290998   * n_11 + 
                                 -12.158766 * n_12 + -12.253782 * n_13 + -7.220704 * n_14 + -2.541181 * n_15 + 1.215612   * n_16 + 3.886083    * n_17 + 
                                 6.135151   * n_18 + -8.444369 )
                               
    n_24 = ActivationFunctionTanh(10.302597 * n_0  + 8.244200   * n_1  + -14.185292* n_2  + 13.714976 * n_3  + 4.907962   * n_4  + 12.433236  * n_5  + 
                                 -8.203466  * n_6  + -66.528106 * n_7  + 15.091921 * n_8  + 38.121362 * n_9  + 29.579851  * n_10 + 20.228125  * n_11 + 
                                 11.020392  * n_12 + 3.869470   * n_13 + 0.689669  * n_14 + -3.861264 * n_15 + -9.321628  * n_16 + -15.294653 * n_17 + 
                                 -27.541435 * n_18 + -20.337546  ) 

    n_25 = ActivationFunctionTanh(-1.627826 * n_0  + 9.116123   * n_1  + -1.200646 * n_2  + -9.625673 * n_3  + -5.152549  * n_4  + -19.117657 * n_5  + 
                                 13.213081  * n_6  + 46.446565  * n_7  + -46.724846* n_8  + -40.816809* n_9  + -9.585565  * n_10 + 21.527438  * n_11 + 
                                 55.283896  * n_12 + 19.174043  * n_13 + -6.846380 * n_14 + -22.655897* n_15 + -27.284941 * n_16 + -21.521456 * n_17 + 
                                 15.595425  * n_18 + 9.994887  ) 

    n_26 = ActivationFunctionTanh(-27.967617* n_0  + -5.809566  * n_1  + 13.463384 * n_2  + 44.691067 * n_3  + 23.844695  * n_4  + -19.670931 * n_5  + 
                                 4.025877   * n_6  + 12.766922  * n_7  + 3.756394  * n_8  + -34.337641* n_9  + -32.025072 * n_10 + -17.237509 * n_11 + 
                                 12.780335  * n_12 + 66.731424  * n_13 + 50.374152 * n_14 + 28.657895 * n_15 + 4.936380   * n_16 + -19.013681 * n_17 + 
                                 -64.075145 * n_18 + -41.163528 ) 
    
    _output := ActivationFunctionTanh(11.418568  * n_19  + -5.655457   * n_20  + -8.168879 * n_21  + 21.670868 * n_22  + 
                                     9.589098    * n_23  + -15.055346  * n_24  + 
                                     5.056228    * n_25  + -4.752974   * n_26  + -11.164846 )



fun_xautry() => 

    float _output = na 
    n_19 = ActivationFunctionTanh(0.475519  * n_0 + 1.056394    * n_1  + 0.950168  * n_2  + -4.178731 * n_3  + 0.187241   * n_4  + 13.799761  * n_5  + 
                                 10.901102  * n_6  + 4.895399   * n_7  + -9.742774 * n_8  + -11.321750* n_9  + -7.479038  * n_10 + -2.477968  * n_11 + 
                                 4.241444   * n_12 + 8.335773   * n_13 + 4.573158  * n_14 + 1.219976  * n_15 + -1.796346  * n_16 + -5.024608  * n_17 + 
                                 -8.911971  * n_18 + -2.953212 ) 

    n_20 = ActivationFunctionTanh(-10.858182 * n_0 + -8.899185  * n_1  + -2.607663 * n_2  + 4.460741  * n_3  + -1.739037  * n_4  + 3.257714   * n_5  + 
                                 7.054854    * n_6  + -5.754372 * n_7  + -9.459680 * n_8  + -12.200287* n_9  + -11.567915 * n_10 + -10.648130 * n_11 + 
                                 -7.781371   * n_12 + 4.659663  * n_13 + 5.499105  * n_14 + 3.977689  * n_15 + 3.263111   * n_16 + 1.158466   * n_17 + 
                                 -2.114300   * n_18 + 5.494963 ) 

    n_21 = ActivationFunctionTanh(3.345555   * n_0  + 1.003003   * n_1  + 0.651057   * n_2  + -2.639811 * n_3  + -0.998654  * n_4  + 6.498868   * n_5  + 
                                 2.311923    * n_6  + -20.033185 * n_7  + 8.963538   * n_8  + 8.227806  * n_9  + 0.488014   * n_10 + -5.935509  * n_11 + 
                                 -11.278107  * n_12 + 3.717008   * n_13 + 6.836876   * n_14 + 6.704634  * n_15 + 4.300719   * n_16 + -1.303810  * n_17 + 
                                 -17.700374  * n_18 + 0.229841 ) 

    n_22 = ActivationFunctionTanh(-3.919608 * n_0  + -9.048796  * n_1  + 2.569821  * n_2  + -2.331822 * n_3  + -10.379683 * n_4  + -4.486772  * n_5  + 
                                 8.439755   * n_6  + -6.308400  * n_7  + -2.982693 * n_8  + -0.239447 * n_9  + -0.022592  * n_10 +  1.502285  * n_11 + 
                                 3.115379   * n_12 + 3.893897   * n_13 + 2.154941  * n_14 + -0.192351 * n_15 + -1.289986  * n_16 + -2.411094  * n_17 + 
                                 -3.599222  * n_18 + 6.175723 ) 

    n_23 = ActivationFunctionTanh(4.402868  * n_0  + -5.216836  * n_1  + -5.896889 * n_2  + -1.758243 * n_3  + -4.102882  * n_4  + -13.527238  * n_5  + 
                                 -11.764023 * n_6  + 12.285479  * n_7  + 12.295540 * n_8  + 8.799378  * n_9  + 7.054745   * n_10 + 5.249620    * n_11 + 
                                 3.865272   * n_12 + 3.283957   * n_13 + 2.090586  * n_14 + 0.725713  * n_15 + -0.065867  * n_16 + -2.292618   * n_17 + 
                                 -7.806065  * n_18 + -7.674225 ) 

    n_24 = ActivationFunctionTanh(10.389207 * n_19 + -15.051517 * n_20 + -15.480584 * n_21 + 10.254325 * n_22 + -0.723254 * n_23 + -1.643501)

    _output := ActivationFunctionTanh(-8.825648 * n_24 + 0.442437 )


// Tickers 

// SWITCHABLE INSTRUMENTS 

float _output = na

if (pref == "GOLD CZK" )

    _output := fun_xauczk()

if (pref == "GOLDSILVER" )

    _output := fun_xauxag()

if (pref == "GOLD")

    _output := fun_gold()

if (pref == "GOLD NZD")

    _output := fun_xaunzd()

if (pref == "GOLD EURO")

    _output := fun_xaueur()

if (pref == "GOLD HUF")

    _output := fun_xauhuf()

if (pref == "GOLD INR")

    _output := fun_xauinr()

if (pref == "GOLD DKK")

    _output := fun_xaudkk()

if (pref == "GOLD CHF")

    _output := fun_xauchf()

if (pref == "GOLD CNH")

    _output := fun_xaucnh()

if (pref == "GOLD MXN")

    _output := fun_xaumxn()

if (pref == "GOLD PLN")

    _output := fun_xaupln()

if (pref == "GOLD ZAR")

    _output := fun_xauzar()


if (pref == "GOLD NOK")

    _output := fun_xaunok()

if (pref == "GOLD TRY")

    _output := fun_xautry()

if (pref == "GOLD THB")

    _output := fun_xauthb()


// ------------------------------------------------------------------------------------------------------------------------------------------

_chg_src = tangentdiff(src) * 100

_seed = (_output - _chg_src) 


// MACD : SEED 

fastLength   = 12
slowlength   = 26
signalLength = 9

macd   = ema(_seed, fastLength) - ema(_seed, slowlength)
signal = ema(macd, signalLength)
	   
hist = macd - signal

positive_condition = hist < 0 
negative_condition = hist > 0

col_hist() => positive_condition ? color.new(#F5FFFA,0) : negative_condition ? color.new(#FF355E,0) : color.new(color.yellow,0)
col_histo = col_hist()

//Plot data

hline(0, color=#FFB300, linewidth = 2)
plot(hist, color=(positive_condition ? #00A86B : #D40000), style=plot.style_histogram,linewidth= 5 , title="Area", transp=30)
plot(hist, color=col_histo,style =plot.style_histogram, title="Forecast", linewidth=1)
